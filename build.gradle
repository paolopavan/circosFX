plugins {
    id 'java'
    id("org.openjfx.javafxplugin") version "0.0.8"
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }

    test {
        java {
            srcDirs = ['test','test/resources']
        }
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/test/resources"
    into "${buildDir}/classes/java/test/resources"
}
processTestResources.dependsOn copyTestResources

task copyResources(type: Copy) {
    from "${projectDir}/src/resources"
    into "${buildDir}/classes/java/main/resources"
}
processResources.dependsOn copyResources

dependencies {
    compile 'commons-logging:commons-logging:1.1.3'
    compile 'org.jetbrains:annotations:13.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

if (JavaVersion.current().isJava11Compatible() ||
        JavaVersion.current().isJava12Compatible() ||
        JavaVersion.current() == JavaVersion.VERSION_HIGHER) {
    apply plugin: 'org.openjfx.javafxplugin'

    javafx {
        // javafx modules that are being used by app.
        modules = ['javafx.controls', 'javafx.base', 'javafx.graphics', 'javafx.fxml', 'javafx.swing']
    }
    // all of these are necessary to use javax library which is no longer included in > java 8
    dependencies {
        compile('javax.xml.bind:jaxb-api:2.3.0')
        compile('javax.activation:activation:1.1')
        compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')
    }
}


jar {
    archiveBaseName = "circosFX"
    archiveVersion = "1.2.1"
    archiveExtension = "jar"


    from 'resources', {
        into 'resources'
    }
}

test {
    useJUnitPlatform()
}